openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: store
    description: Access to Petstore orders
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
  - name: user
    description: Operations about user
paths:
  /{business_id}/employees/{employee_id}/orders:
    post:
      tags:
        - employees
      summary: Create a new order by an employee
      description: Allows an employee to create a new order.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business.
        - name: employee_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the employee creating the order.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_items:
                  type: array
                  description: List of items to be included in the order.
                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                        description: ID of the product (if applicable).
                      service_id:
                        type: integer
                        description: ID of the service (if applicable).
                      variation_id:
                        type: integer
                        description: ID of the product variation (if applicable).
                      quantity:
                        type: integer
                        description: Quantity of the item.
                        example: 2
                      unit_price:
                        type: number
                        format: float
                        description: Price per unit.
                        example: 19.99
                      discount_id:
                        type: integer
                        description: ID of the discount applied (if any).
                      tax_rate_id:
                        type: integer
                        description: ID of the tax rate applied.
              required:
                - order_items
      responses:
        201:
          description: Order created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: integer
                    description: ID of the created order.
                  order_status:
                    type: string
                    enum: [open, closed, canceled]
                    description: Status of the order.
                  total_amount:
                    type: number
                    format: float
                    description: Total amount of the order.
                  created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the order was created.
        400:
          description: Invalid input data.
        404:
          description: Employee or Business not found.

  /{business_id}/orders/{order_id}:
    get:
      tags:
        - orders
      summary: Get order details
      description: Retrieve the details of a specific order.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business.
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the order.
      responses:
        200:
          description: Order details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: integer
                    description: ID of the order.
                  business_id:
                    type: integer
                    description: ID of the business.
                  employee_id:
                    type: integer
                    description: ID of the employee who created the order.
                  order_status:
                    type: string
                    enum: [open, closed, canceled]
                    description: Status of the order.
                  total_discount:
                    type: number
                    format: float
                    description: Total discount applied to the order.
                  total_tip:
                    type: number
                    format: float
                    description: Total tip added to the order.
                  created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the order was created.
                  closed_at:
                    type: string
                    format: date-time
                    description: Timestamp when the order was closed (if applicable).
                  order_items:
                    type: array
                    items:
                      type: object
                      properties:
                        order_item_id:
                          type: integer
                          description: ID of the order item.
                        product_id:
                          type: integer
                          description: ID of the product (if applicable).
                        service_id:
                          type: integer
                          description: ID of the service (if applicable).
                        variation_id:
                          type: integer
                          description: ID of the product variation (if applicable).
                        quantity:
                          type: integer
                          description: Quantity of the item.
                        unit_price:
                          type: number
                          format: float
                          description: Price per unit.
                        tax_rate_id:
                          type: integer
                          description: ID of the tax rate applied.
                        discount_id:
                          type: integer
                          description: ID of the discount applied (if any).
        404:
          description: Order not found.
    put:
      tags:
        - orders
      summary: Modify an open order
      description: Allows an employee to modify an open order by changing its items.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business.
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the order to modify.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_items:
                  type: array
                  description: Updated list of items for the order.
                  items:
                    type: object
                    properties:
                      order_item_id:
                        type: integer
                        description: ID of the existing order item (if modifying).
                      product_id:
                        type: integer
                        description: ID of the product (if applicable).
                      service_id:
                        type: integer
                        description: ID of the service (if applicable).
                      variation_id:
                        type: integer
                        description: ID of the product variation (if applicable).
                      quantity:
                        type: integer
                        description: Quantity of the item.
                        example: 3
                      unit_price:
                        type: number
                        format: float
                        description: Price per unit.
                        example: 29.99
                      discount_id:
                        type: integer
                        description: ID of the discount applied (if any).
                      tax_rate_id:
                        type: integer
                        description: ID of the tax rate applied.
      responses:
        200:
          description: Order modified successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: integer
                    description: ID of the modified order.
                  order_status:
                    type: string
                    enum: [open, closed, canceled]
                    description: Status of the order.
                  total_amount:
                    type: number
                    format: float
                    description: Total amount of the order.
                  updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the order was last updated.
        400:
          description: Invalid input data or order cannot be modified (already closed or canceled).
        404:
          description: Order not found.

  /{business_id}/orders/{order_id}/cancel:
    post:
      tags:
        - orders
      summary: Cancel an open order
      description: Allows an employee to cancel an open (unpaid/not closed) order.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business.
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the order to cancel.
      responses:
        200:
          description: Order canceled successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: integer
                    description: ID of the canceled order.
                  order_status:
                    type: string
                    enum: [open, closed, canceled]
                    description: Status of the order (should be 'canceled').
                  updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the order was canceled.
        400:
          description: Order cannot be canceled (already closed or canceled).
        404:
          description: Order not found.
  /{business_id}/orders/{order_id}/apply_discount:
    post:
      tags:
        - orders
      summary: Apply a discount to an order
      description: Allows an employee to apply a discount to an open order. The discount can be applied to the entire order or to specific order items.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business.
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the order to apply the discount to.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                discount_id:
                  type: integer
                  description: ID of the discount to apply.
                apply_to:
                  type: string
                  enum: [order, items]
                  description: Indicates whether the discount is applied to the entire order or specific items.
                order_item_ids:
                  type: array
                  items:
                    type: integer
                  description: List of order item IDs to which the discount should be applied (required if apply_to is 'items').
              required:
                - discount_id
                - apply_to
      responses:
        200:
          description: Discount applied successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: integer
                    description: ID of the order.
                  total_discount:
                    type: number
                    format: float
                    description: Total discount applied to the order.
                  updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the order was updated.
        400:
          description: Invalid input data or order cannot be modified (already closed or canceled).
        404:
          description: Order or discount not found.
  /{business_id}/orders/{order_id}/pay:
    post:
      tags:
        - orders
      summary: Process payment for an order with optional tip
      description: Processes the payment for an order, allowing the customer to add a tip. Creates a payment record and closes the order.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business.
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the order to process payment for.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method:
                  type: string
                  enum: [cash, credit_card, debit_card, gift_card]
                  description: Payment method used.
                amount_paid:
                  type: number
                  format: float
                  description: Total amount paid by the customer (including tip).
                tip_amount:
                  type: number
                  format: float
                  description: Tip amount added by the customer.
                  example: 5.00
              required:
                - payment_method
                - amount_paid
      responses:
        200:
          description: Payment processed successfully, order closed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: integer
                    description: ID of the order.
                  order_status:
                    type: string
                    enum: [open, closed, canceled]
                    description: Status of the order (should be 'closed').
                  total_tip:
                    type: number
                    format: float
                    description: Total tip added to the order.
                  closed_at:
                    type: string
                    format: date-time
                    description: Timestamp when the order was closed.
                  payment_id:
                    type: integer
                    description: ID of the payment record.
                  payment_method:
                    type: string
                    enum: [cash, credit_card, debit_card, mobile_payment]
                    description: Payment method used.
                  amount_paid:
                    type: number
                    format: float
                    description: Amount paid by the customer.
                  created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the payment was made.
        400:
          description: Invalid input data or order cannot be paid (already closed or canceled).
        404:
          description: Order not found.
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: '94301'
      xml:
        name: address
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
