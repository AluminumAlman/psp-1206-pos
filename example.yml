openapi: 3.0.1
info:
  title: SaaS Application - User Management API
  description: API specification for managing employees and business owners in the SaaS application.
  version: 1.0.0

servers:
  - url: https://api.example.com/v1
    description: Production server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Employee:
      type: object
      properties:
        user_id:
          type: integer
          description: ID of the employee.
        business_id:
          type: integer
          description: ID of the business the employee belongs to.
        email:
          type: string
          format: email
          example: "jane.doe@example.com"
        role:
          type: string
          enum: [Employee]
          description: Role of the user in the business.
          example: "Employee"
        name:
          type: string
          description: Name of the employee.
          example: "Jane Doe"
        phone:
          type: string
          description: Phone number of the employee.
          example: "+1234567890"
        user_state:
          type: string
          enum: [Active, Inactive]
          description: Current state of the employee.
          example: "Active"
        created_at:
          type: string
          format: date-time
          description: Timestamp when the employee was created.
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the employee was last updated.

    BusinessOwner:
      type: object
      properties:
        user_id:
          type: integer
          description: ID of the business owner.
        business_id:
          type: integer
          description: ID of the business they own.
        email:
          type: string
          format: email
          example: "owner@example.com"
        role:
          type: string
          enum: [Owner]
          description: Role of the user in the business.
          example: "Owner"
        name:
          type: string
          description: Name of the business owner.
          example: "John Smith"
        phone:
          type: string
          description: Phone number of the business owner.
          example: "+9876543210"
        user_state:
          type: string
          enum: [Active, Inactive]
          description: Current state of the business owner.
          example: "Active"
        created_at:
          type: string
          format: date-time
          description: Timestamp when the business owner was created.
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the business owner was last updated.

    CreateUserRequest:
      type: object
      required:
        - email
        - password
        - name
      properties:
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          example: "Password123!"
        name:
          type: string
          example: "John Doe"
        phone:
          type: string
          example: "+1234567890"

    UpdateUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        name:
          type: string
          example: "John Doe"
        phone:
          type: string
          example: "+1234567890"
        user_state:
          type: string
          enum: [Active, Inactive]
          example: "Active"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Unauthorized"

paths:
  /{business_id}/employees:
    get:
      summary: Get a list of all employees in a business.
      description: "Retrieve a list of all employees for a given business. Accessible by `Business Owner` and `SuperAdmin`."
      tags:
        - Employee Management
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business.
      responses:
        '200':
          description: List of employees retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No employees found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

    post:
      summary: Create a new employee for a business.
      description: "Create a new employee under a specified business. Accessible by `Business Owner` and `SuperAdmin`."
      tags:
        - Employee Management
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Employee created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

  /{business_id}/employees/{employee_id}:
    get:
      summary: Get employee details by ID.
      description: "Retrieve detailed information of an employee by ID. Accessible by `Business Owner` and `SuperAdmin`."
      tags:
        - Employee Management
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business.
        - name: employee_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the employee.
      responses:
        '200':
          description: Employee details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Employee not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

    put:
      summary: Update employee details.
      description: "Update details of an employee by ID. Accessible by `Business Owner` and `SuperAdmin`."
      tags:
        - Employee Management
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business.
        - name: employee_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the employee.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Employee updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Employee not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

    delete:
      summary: Delete an employee.
      description: "Delete an employee from a business. Accessible by `Business Owner` and `SuperAdmin`."
      tags:
        - Employee Management
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business.
        - name: employee_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the employee to be deleted.
      responses:
        '204':
          description: Employee deleted successfully.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Employee not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

  /business_owners:
    get:
      summary: Get a list of all business owners.
      description: "Retrieve a list of all business owners. Accessible only by `SuperAdmin`."
      tags:
        - Business Owner Management
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
      responses:
        '200':
          description: List of business owners retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessOwner'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No business owners found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

    post:
      summary: Create a new business owner.
      description: "Create a new business owner. Accessible only by `SuperAdmin`."
      tags:
        - Business Owner Management
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Business owner created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessOwner'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

  /business_owners/{owner_id}:
    get:
      summary: Get business owner details by ID.
      description: "Retrieve detailed information of a business owner by ID. Accessible only by `SuperAdmin`."
      tags:
        - Business Owner Management
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: owner_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business owner.
      responses:
        '200':
          description: Business owner details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessOwner'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Business owner not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

    put:
      summary: Update business owner details.
      description: "Update details of a business owner by ID. Accessible only by `SuperAdmin`."
      tags:
        - Business Owner Management
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: owner_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business owner.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Business owner updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessOwner'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Business owner not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

    delete:
      summary: Delete a business owner.
      description: "Delete a business owner. Accessible only by `SuperAdmin`."
      tags:
        - Business Owner Management
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: owner_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business owner to be deleted.
      responses:
        '204':
          description: Business owner deleted successfully.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Business owner not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
